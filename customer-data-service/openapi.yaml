openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /customers/{customerId}:
    get:
      tags:
        - customer-controller
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - customer-controller
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '204':
          description: No Content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
  /customers:
    get:
      tags:
        - customer-controller
      operationId: getAllCustomers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - customer-controller
      operationId: addCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
  /customers/state/{state}:
    get:
      tags:
        - customer-controller
      operationId: getCustomersByState
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 100
          minLength: 0
          type: string
        company:
          maxLength: 50
          minLength: 0
          type: string
        phone:
          maxLength: 20
          minLength: 0
          type: string
        address1:
          maxLength: 50
          minLength: 0
          type: string
        address2:
          maxLength: 50
          minLength: 0
          type: string
        city:
          maxLength: 50
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 2
          type: string
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
        country:
          maxLength: 50
          minLength: 0
          type: string